rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for user profiles
    match /users/{userId} {
      // Anyone can read a user's profile
      allow read: if true;
      // Only the user themselves can create or update their profile
      allow write: if isSignedIn() && isOwner(userId);
    }

    // Rules for questions
    match /questions/{questionId} {
      // Anyone can read questions that have been answered.
      allow read: if resource.data.answer != "";
      // Authenticated users can create new questions.
      allow create: if isSignedIn();
      // No one can update or delete questions through the client.
      allow update, delete: if false;
    }

    // Rules for stories
    match /stories/{storyId} {
      // Anyone can read stories
      allow read: if true;
      // Authenticated users can create new stories
      allow create: if isSignedIn();
       // No one can update or delete stories through the client.
      allow update, delete: if false;
    }

    // Rules for support circle messages
    match /support_circle_messages/{messageId} {
      // Anyone can read messages
      allow read: if true;
      // Authenticated users can send messages
      allow create: if isSignedIn();
       // No one can update or delete messages through the client.
      allow update, delete: if false;
    }

    // Rules for events
    match /events/{eventId} {
      // Anyone can read events
      allow read: if true;
      // Events are admin-only writes
      allow write: if false;
    }
  }
}
